(()=>{var t={273:(t,e,i)=>{var o=i(118),n=i(754),s=n;s.v1=o,s.v4=n,t.exports=s},122:t=>{for(var e=[],i=0;i<256;++i)e[i]=(i+256).toString(16).substr(1);t.exports=function(t,i){var o=i||0,n=e;return[n[t[o++]],n[t[o++]],n[t[o++]],n[t[o++]],"-",n[t[o++]],n[t[o++]],"-",n[t[o++]],n[t[o++]],"-",n[t[o++]],n[t[o++]],"-",n[t[o++]],n[t[o++]],n[t[o++]],n[t[o++]],n[t[o++]],n[t[o++]]].join("")}},287:t=>{var e="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof window.msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto);if(e){var i=new Uint8Array(16);t.exports=function(){return e(i),i}}else{var o=new Array(16);t.exports=function(){for(var t,e=0;e<16;e++)0==(3&e)&&(t=4294967296*Math.random()),o[e]=t>>>((3&e)<<3)&255;return o}}},118:(t,e,i)=>{var o,n,s=i(287),r=i(122),a=0,c=0;t.exports=function(t,e,i){var d=e&&i||0,p=e||[],u=(t=t||{}).node||o,h=void 0!==t.clockseq?t.clockseq:n;if(null==u||null==h){var l=s();null==u&&(u=o=[1|l[0],l[1],l[2],l[3],l[4],l[5]]),null==h&&(h=n=16383&(l[6]<<8|l[7]))}var m=void 0!==t.msecs?t.msecs:(new Date).getTime(),f=void 0!==t.nsecs?t.nsecs:c+1,g=m-a+(f-c)/1e4;if(g<0&&void 0===t.clockseq&&(h=h+1&16383),(g<0||m>a)&&void 0===t.nsecs&&(f=0),f>=1e4)throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");a=m,c=f,n=h;var y=(1e4*(268435455&(m+=122192928e5))+f)%4294967296;p[d++]=y>>>24&255,p[d++]=y>>>16&255,p[d++]=y>>>8&255,p[d++]=255&y;var v=m/4294967296*1e4&268435455;p[d++]=v>>>8&255,p[d++]=255&v,p[d++]=v>>>24&15|16,p[d++]=v>>>16&255,p[d++]=h>>>8|128,p[d++]=255&h;for(var w=0;w<6;++w)p[d+w]=u[w];return e||r(p)}},754:(t,e,i)=>{var o=i(287),n=i(122);t.exports=function(t,e,i){var s=e&&i||0;"string"==typeof t&&(e="binary"===t?new Array(16):null,t=null);var r=(t=t||{}).random||(t.rng||o)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,e)for(var a=0;a<16;++a)e[s+a]=r[a];return e||n(r)}},877:(t,e,i)=>{"use strict";i.d(e,{Z:()=>a});var o=i(178),n=function(t,e){return this.root=t,this.options={tick:!1,ended:!1,urgent:!1,live:!1},this.config=Object.assign({type:"dates",interval:null,start_date:null,end_date:null,urgent_date:null,headline:"",support_text:"",hideOnEnd:!1,aggregateDays:!1},e),this.dates={now:null,start:null,end:null,urgent:null},this.fragments={d:null,H:null,i:null,s:null},this.interval=null,this.init(),this};n.prototype.init=function(){o.addClass(this.root,"initialized"),this.initDates(),this.initFragments(),this.initClock(),this.start()},n.prototype.initDates=function(){if(this.dates.now=new Date,"dates"===this.config.type&&(this.dates.start=new Date(this.config.start_date),this.dates.end=new Date(this.config.end_date),this.dates.urgent=new Date(this.config.urgent_date)),"relative"===this.config.type){var t=new Date;t.setHours(0),t.setMinutes(0),t.setSeconds(0);var e=new Date;e.setHours(23),e.setMinutes(59),e.setSeconds(59),this.dates.start=new Date(t),this.dates.end=new Date(e),this.dates.urgent=new Date(e)}if("interval"===this.config.type&&this.config.interval){var i,o,n=["bn",this.root.id].join("-"),s=("; "+document.cookie).split(n+"="),r=2===s.length?s.pop().split(";").shift():null;if(r){var a=r.split("/");i=new Date(parseInt(a[0],10)),o=new Date(parseInt(a[1],10))}else i=new Date,o=new Date(Date.now()+60*this.config.interval*1e3),document.cookie=n+"="+[i.getTime(),o.getTime()].join("/")+"; SameSite=Lax; path=/";this.dates.start=new Date(i),this.dates.end=new Date(o),this.dates.urgent=new Date(o)}this.options.live=!0,this.notStartedYet()?(this.options.tick=!1,this.options.live=!1,this.hideAssociate("not-started"),this.hide()):this.limitReached()&&(this.options.tick=!1,this.options.ended=!0,this.hideOnEnd())},n.prototype.initFragments=function(){this.fragments={d:this.root.querySelector(".beon-clock__fragment-d, .bn-clock__frag-d"),H:this.root.querySelector(".beon-clock__fragment-H, .bn-clock__frag-H"),i:this.root.querySelector(".beon-clock__fragment-i, .bn-clock__frag-i"),s:this.root.querySelector(".beon-clock__fragment-s, .bn-clock__frag-s")},this.config.aggregateDays&&(o.addClass(this.root,"beon-clock--without-days"),this.fragments.d.style.display="none")},n.prototype.initClock=function(){this.updateFragments()},n.prototype.diff=function(t,e){var i,o,n;return n={d:0,H:0,i:0,s:0},this.limitReached()?(this.end(),this.dates.diff=n,n):((i=t.getTime()-e.getTime())>0&&(o=i/1e3,n.d=Math.floor(o/86400),n.H=Math.floor((o-86400*n.d)/3600),n.i=Math.floor((o-86400*n.d-3600*n.H)/60),n.s=Math.floor(o-86400*n.d-3600*n.H-60*n.i),this.config.aggregateDays&&(n.H=n.H+24*n.d,n.d=0)),this.dates.diff=n,n)},n.prototype.notStartedYet=function(){var t=this.dates.now.getTime()/1e3+100;return this.dates.start.getTime()/1e3>t},n.prototype.limitReached=function(){return this.dates.now.getTime()>this.dates.end.getTime()},n.prototype.updateNow=function(){this.dates.now=new Date},n.prototype.urgentReached=function(){return this.dates.urgent?this.dates.now.getTime()>this.dates.urgent.getTime():0},n.prototype.updateFragments=function(){for(var t=Object.entries(this.diff(this.dates.end,this.dates.now)),e=0;e<t.length;e++){var[i,o]=t[e];this.setFragment(i,o)}},n.prototype.setFragment=function(t,e){var i;i=this.config.aggregateDays&&"H"===t||!this.config.aggregateDays&&"d"===t?e.toString().length<=2?this.pad(e,2,"0"):e:this.pad(e,2,"0"),this.fragments[t].innerText=i},n.prototype.tick=function(){if(!this.options.tick)return this.stop();this.updateNow(),this.updateFragments(),!this.options.urgent&&this.urgentReached()&&this.urgent(),this.limitReached()&&this.end()},n.prototype.start=function(){if(!this.options.live)return this.stop();this.interval=window.setInterval(this.tick.bind(this),1e3),this.options.tick=!0},n.prototype.stop=function(){window.clearInterval(this.interval),this.options.tick=!1},n.prototype.end=function(){this.stop(),this.ended=!0,o.addClass(this.root,"ended"),this.hideOnEnd()},n.prototype.urgent=function(){this.options.urgent=!0,o.addClass(this.root,"urgent")},n.prototype.hideOnEnd=function(){this.ended&&this.config.hideOnEnd&&(this.hideAssociate("ended"),this.hide(),o.addClass(this.root,"bn--clock-ended"))},n.prototype.getAssociate=function(){var t=this.root.getAttribute("data-associate-id"),e=t?document.getElementById(t):null;return this.associate=e,this.associate},n.prototype.hasAssociate=function(){return this.getAssociate(),!!this.associate},n.prototype.hideAssociate=function(t){t=t||"not-started",this.hasAssociate()&&(this.hide(this.getAssociate()),o.addClass(this.getAssociate(),"bn--clock-"+t))},n.prototype.hide=function(t){var e=t||this.root;o.display(e,"none")},n.prototype.pad=function(t,e,i){return e=t.length>e?t.pength:e,(t=i.repeat(e)+t).substr(t.length-e)};const s=n;var r=function(){this.componentRootSelector=".beon-clock",this.initComponents(),this.bindEvents()};const a=r;r.prototype.bindEvents=function(){document.addEventListener("DOMContentLoaded",this.initComponents.bind(this)),document.addEventListener("beon.buddy.elements.handle.item.inject.success",this.initComponentFromInjection.bind(this)),document.addEventListener("beon.buddy.inject.after",this.initComponentFromInjection.bind(this))},r.prototype.initComponents=function(){var t=document.querySelectorAll(this.componentRootSelector+":not(.initialized)");Array.prototype.slice.call(t).forEach(function(t){this.initComponent(t)}.bind(this))},r.prototype.initComponentFromInjection=function(t){var e=t.detail.container.querySelector(this.componentRootSelector+":not(.initialized)");e&&("loading"===document.readyState?document.addEventListener("DOMContentLoaded",function(){this.initComponent(e)}.bind(this)):this.initComponent(e))},r.prototype.initComponent=function(t){try{window.beon_init_log=window.beon_init_log||[];var e=t.getAttribute("data-config"),i=(t.id,JSON.parse(e));new s(t,i)}catch(t){console.log("failed to build component "+this.componentRootSelector,t)}},window&&(window.BeonClockInitializer=r)},178:t=>{const e=function(t,e){for(var i=e.split(","),o=t.className,n=0;n<i.length;n++){var s=i[n];o=o.indexOf(s)<0?o+" "+s:o}t.className=o},i=function(t,e){for(var i=e.split(","),o=t.className,n=0;n<i.length;n++){var s=new RegExp(i[n],"im");o=o.replace(s,"")}t.className=o};t.exports={hasClass:function(t,e){return new RegExp(e+"\b","im").test(t.className)},addClass:e,removeClass:i,display:function(t,o){i(t,"bn--block, bn--flex, bn--grid, bn--hide, bn--none"),e(t,"bn--"+o)}}},380:(t,e,i)=>{"use strict";i.d(e,{Z:()=>r});var o=function(t,e){if(this.root=t,window.beonevents&&window.beonevents[e.id])return;const[i,o,n,s,r,a,c,d,p,u,h,l]=e;return this.config=Object.assign({id:void 0,type:"flag",variant:"seal",position:"45deg",className:void 0,innerHTML:void 0,sealSrc:void 0,style:void 0,itemQuery:void 0,containerQuery:"self",placementOperation:"append",itemsIds:[]},{id:i,type:o,variant:n,position:s,className:r,innerHTML:a,sealSrc:c,style:d,itemQuery:p,containerQuery:u,placementOperation:h,itemsIds:l}),this.init(),this};o.prototype.init=function(){var t;this.root.className=this.root.className+" initialized",this.add(this.config).then((t=>{window.beonevents&&window.beonevents[this.config.id]||(window.beonevents=window.beonevents||{},window.beonevents[this.config.id]=!0)})),document.addEventListener("beon.buddy.slider.init.after",(e=>{window.clearTimeout(t),t=window.setTimeout((()=>{console.log("flags add after slider initialize"),this.add(this.config,document)}),500)})),window.addEventListener("hashchange",(e=>{window.clearTimeout(t),t=window.setTimeout((()=>{console.log("flags add after window change"),this.add(this.config,document)}),1e3)}))},o.prototype.add=function(t,e){return new Promise(function(i){let o;e=e||document,"bullet"===t.variant&&(o=t.innerHTML);for(var n=[],s=0;s<t.itemsIds.length;s++)n.push(new Promise((i=>{var n=t.itemsIds[s];let r,a;Array.isArray(n)?[r,...a]=n:r=n;var c=t.itemQuery.replace(/{id}/gi,r),d=e.querySelectorAll(c);if(d.length){if("dynamic"===t.type){const[e,i]=a;e&&(t.innerHTML=o?o.replace("{x}",` <span class="dynamic_info">${e}</span> `):e),t.className+=i||""}d.length&&d.forEach((e=>{var i="self"===t.containerQuery?e:e.querySelector(t.containerQuery);i||(i=e),this.append(i,t)})),i()}else i()})));Promise.all(n).then((t=>i(t)))}.bind(this))},o.prototype.append=function(t,e){if(!t.querySelector(".beon-tags.beon-tag__"+e.id)){var i=document.createElement("div"),o=["beon-tags","beon-tag__"+e.id,"beon-tag__"+e.position,"beon-tag__"+e.type,"beon-tag__"+e.type+"--"+e.variant,e.className],n=e.style;e.sealSrc&&(n+="background-image: url("+e.sealSrc+");"),i.className=o.join(" "),i.setAttribute("style",n),i.innerHTML=e.innerHTML,"replace"===e.placementOperation&&(t.innerHTML=""),t.appendChild(i)}};const n=o;var s=function(){this.componentRootSelector="meta[name^=beon-magicflag]",this.initComponents(),this.bindEvents()};const r=s;s.prototype.bindEvents=function(){document.addEventListener("DOMContentLoaded",this.initComponents.bind(this)),document.addEventListener("beon.buddy.elements.handle.item.inject.success",this.initComponentFromInjection.bind(this)),document.addEventListener("beon.buddy.inject.after",this.initComponentFromInjection.bind(this)),this.initComponents()},s.prototype.initComponents=function(){var t=document.querySelectorAll(this.componentRootSelector+":not(.initialized)");Array.prototype.slice.call(t).forEach(function(t){this.initComponent(t)}.bind(this))},s.prototype.initComponentFromInjection=function(t){var e=t.detail.container.querySelector(this.componentRootSelector+":not(.initialized)");e&&("loading"===document.readyState?document.addEventListener("DOMContentLoaded",function(){this.initComponent(e)}.bind(this)):this.initComponent(e))},s.prototype.initComponent=function(t){try{window.beon_init_log=window.beon_init_log||[];var e=t.getAttribute("data-config"),i=t.parentNode.id,o=JSON.parse(e);if(window.beon_init_log.indexOf(i)>-1)return;window.beon_init_log.push(i),new Promise((function(e,i){e(new n(t,o))}))}catch(t){console.log("failed to build component "+this.componentRootSelector,t)}},window&&(window.BeonMagicFlagInitializer=s)},457:(t,e,i)=>{"use strict";i.d(e,{Z:()=>a});var o=i(178),n=function(t,e){return this.root=t,this.options={is_dismissed:!1,uuid:void 0},this.config=Object.assign({auto_dismiss:5,allow_dismiss:!0,allow_reopen:!0,reopen_after:0,dismiss_label:"Dispensar",dismiss_style:"text"},e),this.init(),this};n.prototype.init=function(){this.root&&(o.addClass(this.root,"initialized"),this.options.uuid=this.root.parentNode.id,this.initStoredData(),this.initDismissBehaviour(),this.initCtaClose())},n.prototype.initStoredData=function(){window.localStorage?this.options.is_dismissed=window.localStorage.getItem([this.options.uuid,"dismissed"].join("_"))||!1:console.warn("storage unreachable")},n.prototype.setStoredData=function(t,e){window.localStorage?window.localStorage.setItem([this.options.uuid,t].join("_"),e):console.warn("storage unreachable")},n.prototype.initDismissBehaviour=function(){return this.config.allow_dismiss&&this.buildDismissControl(),this.config.auto_dismiss>0&&this.initAutoDismiss(),this.options.is_dismissed?this.dismiss():this.show()},n.prototype.buildDismissControl=function(){var t=document.createElement("span");t.innerText=this.config.dismiss_label,t.className=["beon-notificacao__dismiss","beon-notificacao__dismiss--"+this.config.dismiss_style].join(" "),this.root.append(t),t.addEventListener("click",this.dismiss.bind(this))},n.prototype.initAutoDismiss=function(){this.setDismissTimeout(this.config.auto_dismiss),this.root.addEventListener("mouseenter",function(t){window.clearTimeout(this.root_mouseover_debounce),this.root_mouseover_debounce=window.setTimeout(function(){this.unsetDismissTimeout()}.bind(this),300)}.bind(this)),this.root.addEventListener("mouseleave",function(t){window.clearTimeout(this.root_mouseout_debounce),this.root_mouseout_debounce=window.setTimeout(function(){this.config.allow_dismiss||this.setDismissTimeout(this.config.auto_dismiss)}.bind(this),300)}.bind(this))},n.prototype.setDismissTimeout=function(t){this.options.dismiss_timeout=window.setTimeout(this.dismiss.bind(this),1e3*t+2)},n.prototype.unsetDismissTimeout=function(){window.clearTimeout(this.options.dismiss_timeout)},n.prototype.dismiss=function(t){o.addClass(this.root,"beon-notificacao--dismissed"),o.removeClass(this.root,"beon-notificacao--opened"),o.display(this.root,"none"),t&&this.setStoredData("dismissed",!0)},n.prototype.show=function(){o.hasClass(this.root,"bn--none")?this.dismiss():(o.removeClass(this.root,"beon-notificacao--dismissed"),o.addClass(this.root,"beon-notificacao--opened"),o.display(this.root,"block"))},n.prototype.initCtaClose=function(){var t=this.root.querySelector(".beon-notificacao__cta");t&&t.href.indexOf("#close")>-1&&t.addEventListener("click",function(t){t.preventDefault(),t.stopPropagation(),this.dismiss()}.bind(this))},n.prototype.display=function(t,e){window.clearTimeout(this.options.displayTimeout),this.options.displayTimeout=window.setTimeout((()=>{o.display(t,e)}),1e3)};const s=n;var r=function(){return this.componentRootSelector=".beon-notificacao",this.initComponents(),this.bindEvents(),this};const a=r;r.prototype.bindEvents=function(){document.addEventListener("DOMContentLoaded",this.initComponents.bind(this)),document.addEventListener("beon.buddy.elements.handle.item.inject.success",this.initComponentFromInjection.bind(this)),document.addEventListener("beon.buddy.inject.after",this.initComponentFromInjection.bind(this))},r.prototype.initComponents=function(){var t=document.querySelectorAll(this.componentRootSelector+":not(.initialized)");Array.prototype.slice.call(t).forEach(function(t){this.initComponent(t)}.bind(this))},r.prototype.initComponentFromInjection=function(t){var e=t.detail.container.querySelector(this.componentRootSelector+":not(.initialized)");e&&("loading"===document.readyState?document.addEventListener("DOMContentLoaded",function(){this.initComponent(e)}.bind(this)):this.initComponent(e))},r.prototype.initComponent=function(t){try{var e=t.getAttribute("data-config"),i=JSON.parse(e);new Promise((function(e,o){e(new s(t,i))}))}catch(t){console.log("failed to build component "+this.componentRootSelector,t)}},window&&(window.BeonNotificationInitializer=r)}},e={};function i(o){if(e[o])return e[o].exports;var n=e[o]={exports:{}};return t[o](n,n.exports,i),n.exports}i.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return i.d(e,{a:e}),e},i.d=(t,e)=>{for(var o in e)i.o(e,o)&&!i.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{"use strict";var t=i(273),e=i.n(t);function o(t,e){return t=t||"beon",function(){e&&Array.prototype.slice.call(arguments).forEach((function(e){"object"==typeof e?(console.log(t+": object"),console.log(e)):console.log(t+": "+e)}))}}function n(t,e){return this.engine=t,this.log=o("tracker",this.engine.debug),this.parser=e,this}function s(){return this.log=o("Parser",!0),this}n.prototype.init=function(){return this.consumeTrackQueue(),this},n.prototype.consumeTrackQueue=function(){this.engine.getTrackQueue().consume(this.track.bind(this))},n.prototype.track=function(t){var e=t.shift(),i=t.shift(),o=t.shift();switch(e){case"pageview":this.pageview(i,o);break;case"cart_update":case"cart":this.cartUpdate(o);break;case"customer_update":case"customer":this.customerUpdate(o);break;case"transaction":this.transaction(o);break;default:return void this.log("invalid method to track")}this.engine.dispatchEvent("tracker.dispatch.done",{eventType:e,type:i})},n.prototype.pageview=function(t,i){var o=i?i():this.parser.parse(t),n={event_id:e().v4(),timestamp:Date.now(),type:"pageview",payload:Object.assign({pageType:t,title:document.title,url:window.location.href,referer:document.referrer},o)};beon("send","event",n),this.log(n)},n.prototype.cartUpdate=function(t){var i=t?t():this.parser.parse("cart"),o={event_id:e().v4(),timestamp:Date.now(),type:"cart",payload:i};beon("send","event",o),this.log(o)},n.prototype.customerUpdate=function(t){var i=t?t():this.parser.parse("customer"),o={event_id:e().v4(),timestamp:Date.now(),type:"customer",payload:i};beon("send","event",o),this.log(o)},n.prototype.transaction=function(t){var i=t?t():this.parser.parse("transaction"),o={event_id:e().v4(),timestamp:Date.now(),type:"transaction",payload:i};beon("send","event",o),this.log(o)},s.prototype.getDataLayer=function(t,e,i){var o=[];if(e=e||"event",window.dataLayer)for(var n=0;n<window.dataLayer.length;n++)window.dataLayer[n][e]&&t.test(window.dataLayer[n][e])&&o.push(window.dataLayer[n]);return"bottom"===i?o.pop():o.shift()},s.prototype.parse=function(t){var e=void 0;switch(t){case"homepage":e=this.parseHomepage();break;case"product":e=this.parseProduct();break;case"catalog":e=this.parseCatalog();break;case"cart":e=this.parseCart();break;case"customer":e=this.parseCustomer();break;case"transaction":e=this.parseTransaction();break;case"search":e=this.parseSearch();break;case"notfound":e=this.parseNotfound()}return e||{}},s.prototype.parseHomepage=function(){return{}},s.prototype.parseProduct=function(){return{sku:void 0,product_id:void 0}},s.prototype.parseCatalog=function(){return{trees:void 0}},s.prototype.parseCart=function(){return{items:void 0,subtotal:void 0,coupon:void 0,shipping:{postcode:void 0,price:void 0,method:void 0}}},s.prototype.parseTransaction=function(){return{items:void 0,subtotal:void 0,coupon:void 0,shipping:{postcode:void 0,price:void 0,method:void 0},customer:{email:void 0,name:void 0},payments:void 0}},s.prototype.parseCustomer=function(){return{email:void 0,name:void 0,postcode:void 0}},s.prototype.parseSearch=function(){return{}},s.prototype.parseNotfound=function(){return{}};var r=function(){return this};const a=r;r.prototype.init=function(){this.initParser(),this.initTracker(),this.initCustomTriggers()},r.prototype.initParser=function(t){return this.parser=t||new s,this.parser},r.prototype.initTracker=function(){this.tracker=new n(window.beone,this.parser),this.tracker.init()},r.prototype.initCustomTriggers=function(){};var c=s;const d=c;var p=t=>t.toLowerCase().replace(/\s/gi,"_").replace(/([\xE0-\xFF])/gi,(t=>{const e=[[/[\xE0-\xE6]/g,"a"],[/[\xE8-\xEB]/g,"e"],[/[\xEC-\xEF]/g,"i"],[/[\xF2-\xF6]/g,"o"],[/[\xF9-\xFC]/g,"u"],[/\xE7/g,"c"],[/\xF1/g,"n"]].find((e=>e[0].test(t)));return e?e[1]:t})).replace(/\W/gi,"");function u(t){return this.log=o("vtex_plugin",!0),this.options=Object.assign({immediate:!1,strategy:"none",intervalDelay:-1,debounceDelay:-1},t),this.initCartPool(),this}c.prototype.parseProduct=function(){var t=this.getDataLayer(/product/i,"pageCategory");return t?{sku:Object.keys(t.skuStocks).shift(),product_id:t.productId}:(this.log("empty source at parseProduct parser"),{})},c.prototype.parseCatalog=function(){var t=this.getDataLayer(/(category|department)/i,"pageCategory");if(!t)return this.log("empty source at parseCatalog parser"),{};var e=[];return"Category"==t.pageCategory&&e.push({kind:"category",tree_id:p(t.categoryName||t.pageTitle)}),t.pageDepartment&&e.push({kind:"department",tree_id:p(t.pageDepartment)}),{trees:e}},c.prototype.parseCart=function(){return this.parseOrderForm()},c.prototype.parseTransaction=function(){return this.parseTransactionInfo()},c.prototype.parseCustomer=function(){var t=this.parseOrderForm(),e={};return t?(t.customer&&t.customer.email&&(e.email=t.customer.email),t.customer&&t.customer.name&&(e.name=t.customer.name),t.shipping&&t.shipping.postcode&&(e.postcode=t.shipping.postcode),e):(this.log("invalid orderForm at parseCustomer parser"),{})},c.prototype.parseSearch=function(){var t={term:void 0,results:void 0},e=this.getDataLayer(/InternalSiteSearch/i,"pageCategory");return e&&(t.term=e.siteSearchTerm,t.results_count=e.siteSearchResults),t},c.prototype.parseOrderForm=function(){var t=this.getDataLayer(/^(cartLoaded|cart|email|shipping|payment|orderPlaced)$/i,"event");if(t){var e={items:[],subtotal:null,coupons:[],shipping:{postcode:null,price:null,method:null},customer:{email:null,name:null},payments:[]};if(t.orderFormProducts)for(var i in t.orderFormProducts){var o=t.orderFormProducts[i];e.items.push({product_id:o.id,sku:o.sku,qty:o.quantity,price_to:o.price})}return t.orderFormPromoCode&&e.coupons.push(t.orderFormPromoCode),t.orderFormTotal&&(e.subtotal=t.orderFormTotal/100),t.orderFormShipping&&(e.shipping.postcode=t.visitorDemographicInfo[0],e.shipping.price=t.orderFormShipping,e.shipping.method=t.orderFormShippingMethod),t.visitorContactInfo&&(e.customer.email=t.visitorContactInfo.shift(),e.customer.name=t.visitorContactInfo.join(" ")),t.orderFormPaymentType&&e.payments.push(t.orderFormPaymentType),e}this.log("empty source at parseOrderForm parser")},c.prototype.parseTransactionInfo=function(){var t=this.getDataLayer(/orderPlaced/i);if(t){var e={id:null,items:[],total:null,shipping:{price:null,method:null,postcode:null},payments:[]};for(var i in e.id=t.transactionId,e.total=t.transactionTotal,t.transactionProducts){var o=t.transactionProducts[i];e.items.push({product_id:o.id,sku:o.sku,qty:o.quantity,price_to:o.price})}for(e.shipping.price=t.transactionShipping,i=t.transactionPaymentType.length-1;i>=0;i--){var n=t.transactionPaymentType[i];e.payments.push(n.group)}return e}this.log("empty source at parseTransactionInfo parser")},u.prototype.initCartPool=function(){return["interval","debounce"].indexOf(this.options.strategy)>-1?document.addEventListener("beon.tracker.dispatch.done",function(t){if(this.cartpool)this.log("cart pool already running");else{var e=t.detail.eventType,i=t.detail.type;"pageview"!=e||["cart","transaction","checkout"].indexOf(i)>-1?this.log("skip cart pool at "+i+" "+e):(this.cartpool=new h(this.options),this.log("cartPool init with "+this.options.strategy+" strategy"))}}.bind(this)):this.cartpool=new h(this.options),this.cartpool};var h=function(t){switch(this.version="0.2.1",this.api="/api/checkout/pub/orderForm/?{%22expectedOrderFormSections%22:[%22clientProfileData%22,%22clientPreferencesData%22,%22items%22]}",this.request=null,this.options=Object.assign({immediate:!1,strategy:"none",intervalDelay:-1,debounceDelay:-1},t),this.options.strategy){case"debounce":this.debounce();break;case"interval":this.interval()}return this};h.prototype.buildRequest=function(){var t=new XMLHttpRequest;t.open("GET",this.api),t.setRequestHeader("Content-Type","application/json"),this.request=t},h.prototype.fetch=function(t){return!this.error&&(this.buildRequest(),this.request.addEventListener("load",function(e){var i,o=e.target;if(o.readyState<4||o.status>200)throw new Error("request failed");i=JSON.parse(o.response),t(i)}.bind(this)),this.request.send())},h.prototype.parse=function(t){var e={shipping:{},items:[]},i={};if(t.items&&t.items.length)for(var o in e.items=[],t.items)t.items[o].hasOwnProperty("productId")&&e.items.push({product_id:t.items[o].productId,sku:t.items[o].id,price_to:t.items[o].sellingPrice/100,qty:t.items[o].quantity});if(t.shippingData&&t.shippingData.address&&(e.shipping.postcode=t.shippingData.address.postalCode),t.totalizers)for(var o in t.totalizers)"Items"==t.totalizers[o].id&&(e.subtotal=t.totalizers[o].value/100),"Shipping"==t.totalizers[o].id&&(e.shipping.price=t.totalizers[o].value/100);return t.clientProfileData&&t.clientProfileData.email&&(i.email=t.clientProfileData.email,i.phone=t.clientProfileData.isCorporate?t.clientProfileData.corporatePhone:t.clientProfileData.phone,i.name=t.clientProfileData.isCorporate?t.clientProfileData.corporateName:[t.clientProfileData.firstName,t.clientProfileData.lastName].join(" ")),{cart:e,customer:i}},h.prototype.parseAndPush=function(t){var e=this.parse(t),i=[];if(e&&e.cart&&i.push(["track","cart",null,function(){return e.cart}]),e&&e.customer&&i.push(["track","customer",null,function(){return e.customer}]),window.beon)for(var o=i.length-1;o>=0;o--)window.beon.apply(window.beon,i[o])},h.prototype.handleFetch=function(t){if(this.error)return!1;var e=t||this.parseAndPush;try{return this.fetch(e)}catch(t){this.error=!0}},h.prototype.interval=function(t,e){this.options.immediate&&this.handleFetch.bind(this),this.intervalTimeout=window.setTimeout(function(){this.handleFetch.bind(this)&&this.interval(t,e)}.bind(this),e||this.options.intervalDelay)},h.prototype.debounce=function(t,e){this.options.immediate&&this.handleFetch.bind(this),document.addEventListener("click",function(){this.debounceTimeout&&window.clearTimeout(this.debounceTimeout),this.debounceTimeout=window.setTimeout(this.handleFetch.bind(this),e||this.options.debounceDelay)}.bind(this))};var l=i(380),m=i(877),f=i(457),g=function(){return new u,a.call(this),this};(g.prototype=Object.create(a.prototype)).constructor=g,g.prototype.initParser=function(){return a.prototype.initParser.call(this,new d),this.parser.parseProduct=function(){var t={pathname:void 0};try{var e=document.querySelector("link[rel=canonical]");if(!e)return{};var i=e.getAttribute("href").replace(window.location.origin,"");t.pathname=i}catch(t){console.warn(`product parse failed with ${t.message}`)}return t},this.parser},g.prototype.initCustomTriggers=function(){return a.prototype.initCustomTriggers.call(this),new l.Z,new m.Z,new f.Z,this},window.beon_custom=new g,window.beon_custom.init()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,