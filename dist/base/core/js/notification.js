(()=>{var i={178:i=>{const t=function(i,t){for(var o=t.split(","),s=i.className,n=0;n<o.length;n++){var e=o[n];s=s.indexOf(e)<0?s+" "+e:s}i.className=s},o=function(i,t){for(var o=t.split(","),s=i.className,n=0;n<o.length;n++){var e=new RegExp(o[n],"im");s=s.replace(e,"")}i.className=s};i.exports={hasClass:function(i,t){return new RegExp(t+"\b","im").test(i.className)},addClass:t,removeClass:o,display:function(i,s){o(i,"bn--block, bn--flex, bn--grid, bn--hide, bn--none"),t(i,"bn--"+s)}}}},t={};function o(s){if(t[s])return t[s].exports;var n=t[s]={exports:{}};return i[s](n,n.exports,o),n.exports}(()=>{"use strict";var i=o(178),t=function(i,t){return this.root=i,this.options={is_dismissed:!1,uuid:void 0},this.config=Object.assign({auto_dismiss:5,allow_dismiss:!0,allow_reopen:!0,reopen_after:0,dismiss_label:"Dispensar",dismiss_style:"text"},t),this.init(),this};t.prototype.init=function(){this.root&&(i.addClass(this.root,"initialized"),this.options.uuid=this.root.parentNode.id,this.initStoredData(),this.initDismissBehaviour(),this.initCtaClose())},t.prototype.initStoredData=function(){window.localStorage?this.options.is_dismissed=window.localStorage.getItem([this.options.uuid,"dismissed"].join("_"))||!1:console.warn("storage unreachable")},t.prototype.setStoredData=function(i,t){window.localStorage?window.localStorage.setItem([this.options.uuid,i].join("_"),t):console.warn("storage unreachable")},t.prototype.initDismissBehaviour=function(){return this.config.allow_dismiss&&this.buildDismissControl(),this.config.auto_dismiss>0&&this.initAutoDismiss(),this.options.is_dismissed?this.dismiss():this.show()},t.prototype.buildDismissControl=function(){var i=document.createElement("span");i.innerText=this.config.dismiss_label,i.className=["beon-notificacao__dismiss","beon-notificacao__dismiss--"+this.config.dismiss_style].join(" "),this.root.append(i),i.addEventListener("click",this.dismiss.bind(this))},t.prototype.initAutoDismiss=function(){this.setDismissTimeout(this.config.auto_dismiss),this.root.addEventListener("mouseenter",function(i){window.clearTimeout(this.root_mouseover_debounce),this.root_mouseover_debounce=window.setTimeout(function(){this.unsetDismissTimeout()}.bind(this),300)}.bind(this)),this.root.addEventListener("mouseleave",function(i){window.clearTimeout(this.root_mouseout_debounce),this.root_mouseout_debounce=window.setTimeout(function(){this.config.allow_dismiss||this.setDismissTimeout(this.config.auto_dismiss)}.bind(this),300)}.bind(this))},t.prototype.setDismissTimeout=function(i){this.options.dismiss_timeout=window.setTimeout(this.dismiss.bind(this),1e3*i+2)},t.prototype.unsetDismissTimeout=function(){window.clearTimeout(this.options.dismiss_timeout)},t.prototype.dismiss=function(t){i.addClass(this.root,"beon-notificacao--dismissed"),i.removeClass(this.root,"beon-notificacao--opened"),i.display(this.root,"none"),t&&this.setStoredData("dismissed",!0)},t.prototype.show=function(){i.hasClass(this.root,"bn--none")?this.dismiss():(i.removeClass(this.root,"beon-notificacao--dismissed"),i.addClass(this.root,"beon-notificacao--opened"),i.display(this.root,"block"))},t.prototype.initCtaClose=function(){var i=this.root.querySelector(".beon-notificacao__cta");i&&i.href.indexOf("#close")>-1&&i.addEventListener("click",function(i){i.preventDefault(),i.stopPropagation(),this.dismiss()}.bind(this))},t.prototype.display=function(t,o){window.clearTimeout(this.options.displayTimeout),this.options.displayTimeout=window.setTimeout((()=>{i.display(t,o)}),1e3)};const s=t;var n=function(){return this.componentRootSelector=".beon-notificacao",this.initComponents(),this.bindEvents(),this};n.prototype.bindEvents=function(){document.addEventListener("DOMContentLoaded",this.initComponents.bind(this)),document.addEventListener("beon.buddy.elements.handle.item.inject.success",this.initComponentFromInjection.bind(this)),document.addEventListener("beon.buddy.inject.after",this.initComponentFromInjection.bind(this))},n.prototype.initComponents=function(){var i=document.querySelectorAll(this.componentRootSelector+":not(.initialized)");Array.prototype.slice.call(i).forEach(function(i){this.initComponent(i)}.bind(this))},n.prototype.initComponentFromInjection=function(i){var t=i.detail.container.querySelector(this.componentRootSelector+":not(.initialized)");t&&("loading"===document.readyState?document.addEventListener("DOMContentLoaded",function(){this.initComponent(t)}.bind(this)):this.initComponent(t))},n.prototype.initComponent=function(i){try{var t=i.getAttribute("data-config"),o=JSON.parse(t);new Promise((function(t,n){t(new s(i,o))}))}catch(i){console.log("failed to build component "+this.componentRootSelector,i)}},window&&(window.BeonNotificationInitializer=n)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,