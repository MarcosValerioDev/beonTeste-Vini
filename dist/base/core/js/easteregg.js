(()=>{"use strict";var t=function(t,e){return this.root=t,this.config=Object.assign({prizeStyle:"modal"},e),this.init(),this};t.prototype.init=function(){this.root.className=this.root.className+" initialized",this.updatePrize(),this.bindTrigger(),this.bindDismiss()},t.prototype.bindTrigger=function(){var t=this.root.querySelector(".beon-easteregg__trigger-container");if(!t)throw new Error("trigger not found");t.addEventListener("click",this.handleTrigger.bind(this))},t.prototype.handleTrigger=function(){this.step?1===this.step&&this.changeStep(0):this.changeStep(1)},t.prototype.bindDismiss=function(){var t=this.root.querySelector(".beon-easteregg__dismiss");t&&t.addEventListener("click",this.handleDismiss.bind(this))},t.prototype.handleDismiss=function(){this.changeStep(0)},t.prototype.updatePrize=function(){var t=this.root.querySelector(".beon-easteregg__prize");this.config.prizeStyle&&(t.className+=" beon-easteregg__prize--"+this.config.prizeStyle),this.hidePrize()},t.prototype.showPrize=function(){this.hidePrize(),this.root.querySelector(".beon-easteregg__prize").className+=" opened"},t.prototype.hidePrize=function(){var t=this.root.querySelector(".beon-easteregg__prize");if(!t)throw new Error("prize not found");t.className=t.className.replace(/( opened)/gi,"")},t.prototype.changeStep=function(t){0===t?this.hidePrize():1===t&&this.showPrize(),this.step=t};const e=t;var i=function(){this.componentRootSelector=".beon-easteregg",this.initComponents(),this.bindEvents()};i.prototype.bindEvents=function(){document.addEventListener("DOMContentLoaded",this.initComponents.bind(this)),document.addEventListener("beon.buddy.elements.handle.item.inject.success",this.initComponentFromInjection.bind(this)),document.addEventListener("beon.buddy.inject.after",this.initComponentFromInjection.bind(this))},i.prototype.initComponents=function(){var t=document.querySelectorAll(this.componentRootSelector+":not(.initialized)");Array.prototype.slice.call(t).forEach(function(t){this.initComponent(t)}.bind(this))},i.prototype.initComponentFromInjection=function(t){var e=t.detail.container.querySelector(this.componentRootSelector+":not(.initialized)");e&&("loading"===document.readyState?document.addEventListener("DOMContentLoaded",function(){this.initComponent(e)}.bind(this)):this.initComponent(e))},i.prototype.initComponent=function(t){try{var i=t.getAttribute("data-config"),n=JSON.parse(i);new e(t,n)}catch(t){console.log("failed to build component "+this.componentRootSelector,t)}},window&&(window.BeonEasterEggInitializer=i)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,